{"version":3,"sources":["components/TodoItem/TodoItem.js","components/AddItem/AddItem.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","items","Delete","ItemsList","length","map","item","key","id","className","name","age","onClick","AddItem","state","handelChange","e","setState","target","value","handelSubmit","preventDefault","onSubmit","this","type","placeholder","onChange","React","Component","App","DeleteItem","i","findIndex","splice","Math","random","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAiCeA,G,YA9BE,SAACC,GAAW,IAElBC,EAAgBD,EAAhBC,MAAMC,EAAUF,EAAVE,OAGPC,EAFOF,EAAMG,OAGXH,EAAMI,KAAK,SAACC,GACR,OACI,yBAAKC,IAAOD,EAAKE,IACb,0BAAMC,UAAY,QAAlB,IAA2BH,EAAKI,KAAhC,KACA,0BAAMD,UAAY,OAAlB,IAA0BH,EAAKK,IAA/B,KACA,0BAAMF,UAAY,cAAcG,QAAW,kBAAKV,EAAOI,EAAKE,MAA5D,WAIhB,yDAEJ,OACI,yBAAKC,UAAY,aACb,6BACI,0BAAMA,UAAY,eAAlB,QACA,0BAAMA,UAAY,cAAlB,OACA,0BAAMA,UAAY,iBAAlB,WAGHN,K,OCsBEU,G,kNA7CXC,MAAQ,CACJJ,KAAO,GACPC,IAAM,I,EAGVI,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOV,GAAMQ,EAAEE,OAAOC,S,EAIjCC,aAAe,SAACJ,GACZA,EAAEK,iBAC0B,KAAxBL,EAAEE,OAAOR,KAAKS,OAAuC,KAAvBH,EAAEE,OAAOP,IAAIQ,QAC3C,EAAKnB,MAAMa,QAAQ,EAAKC,OACxB,EAAKG,SAAS,CACVP,KAAM,GACNC,IAAM,O,uDAMd,OACI,6BACI,0BAAMW,SAAYC,KAAKH,cACnB,2BAAOI,KAAO,OACbC,YAAc,kBACdjB,GAAK,OACLkB,SAAYH,KAAKR,aACjBI,MAASI,KAAKT,MAAMJ,OAErB,2BAAOc,KAAO,SACbC,YAAc,iBACdjB,GAAK,MACLkB,SAAYH,KAAKR,aACjBI,MAASI,KAAKT,MAAMH,MAEpB,2BAAOa,KAAO,SAASL,MAAQ,c,GAxC9BQ,IAAMC,YC8CbC,E,4MA1CTf,MAAQ,CACJb,MAAQ,CACJ,CAACO,GAAG,EAAEE,KAAK,QAAQC,IAAI,IACvB,CAACH,GAAG,EAAEE,KAAK,UAAUC,IAAI,IACzB,CAACH,GAAG,EAAEE,KAAK,SAASC,IAAI,M,EAIhCmB,WAAa,SAACtB,GAOV,IAAIP,EAAQ,EAAKa,MAAMb,MACnB8B,EAAI9B,EAAM+B,WAAU,SAAA1B,GAAI,OAAIA,EAAKE,KAAOA,KAC5CP,EAAMgC,OAAOF,EAAG,GAChB,EAAKd,SAAS,CAAChB,W,EAGnBY,QAAU,SAACP,GACTA,EAAKE,GAAK0B,KAAKC,SACf,IAAIlC,EAAQ,EAAKa,MAAMb,MACvBA,EAAMmC,KAAK9B,GACX,EAAKW,SAAS,CAAChB,W,uDAIjB,OAEE,yBAAKQ,UAAU,aAEf,4CACA,kBAAC,EAAD,CAAUR,MAASsB,KAAKT,MAAMb,MAAOC,OAAUqB,KAAKO,aACpD,kBAAC,EAAD,CAASjB,QAAWU,KAAKV,e,GArCfc,IAAMC,WCOJS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9ae597aa.chunk.js","sourcesContent":["import React from 'react'\r\nimport './TodoItem.css'\r\n\r\nconst TodoItem = (props) => {\r\n\r\n    const {items,Delete} = props;\r\n    let length = items.length;\r\n\r\n    const ItemsList = length ? (\r\n            items.map ((item) => {\r\n                return (\r\n                    <div key = {item.id} >\r\n                        <span className = \"name\"> {item.name} </span>\r\n                        <span className = \"age\"> {item.age} </span>\r\n                        <span className = \"action icon\" onClick = {()=> Delete(item.id)} > x </span>\r\n                    </div>\r\n                )\r\n            })\r\n    ) : <p> No There Is Item To Show </p>\r\n\r\n    return (\r\n        <div className = \"ClassList\"> \r\n            <div>\r\n                <span className = \"name header\">name</span>\r\n                <span className = \"age header\">age</span>\r\n                <span className = \"action header\">action</span>\r\n            </div>\r\n\r\n            {ItemsList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React from 'react'\r\nimport './AddItem.css'\r\n\r\nclass AddItem extends React.Component {\r\n\r\n    state = {\r\n        name : '',\r\n        age : ''\r\n    }\r\n\r\n    handelChange = (e) => {\r\n        this.setState ({\r\n            [e.target.id] : e.target.value\r\n        })\r\n    }\r\n\r\n    handelSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.name.value !== '' && e.target.age.value !== '') {\r\n            this.props.AddItem(this.state)\r\n            this.setState({\r\n                name: '',\r\n                age : ''\r\n            })\r\n            }\r\n    }  \r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <form onSubmit = {this.handelSubmit}>\r\n                    <input type = \"text\"\r\n                     placeholder = \"Enter Name ....\"\r\n                     id = \"name\"\r\n                     onChange = {this.handelChange} \r\n                     value = {this.state.name}/> \r\n\r\n                    <input type = \"number\"\r\n                     placeholder = \"Enter Age ....\"\r\n                     id = \"age\"\r\n                     onChange = {this.handelChange} \r\n                     value = {this.state.age} /> \r\n\r\n                     <input type = \"submit\" value = \"Add\" />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem","import React, {Component} from 'react';\nimport './App.css';\nimport TodoItem from './components/TodoItem/TodoItem'\nimport AddItem from './components/AddItem/AddItem'\n\nclass App extends React.Component {\n\n      state = {\n          items : [\n              {id:1,name:'karim',age:19},\n              {id:2,name:'mohamed',age:22},\n              {id:3,name:'khalid',age:23}\n          ]\n      }\n\n      DeleteItem = (id) => {\n\n          // let items = this.state.items.filter(item => {\n          //   return item.id !== id\n          // })\n          // this.setState({items})\n\n          let items = this.state.items\n          let i = items.findIndex(item => item.id === id)\n          items.splice(i, 1)\n          this.setState({items})\n      }\n\n      AddItem = (item) => {\n        item.id = Math.random();\n        let items = this.state.items;\n        items.push(item);\n        this.setState({items})\n      }\n\n    render () {\n      return (\n\n        <div className=\"container\">\n\n        <h1> To Do List </h1>\n        <TodoItem items = {this.state.items} Delete = {this.DeleteItem}/>\n        <AddItem AddItem = {this.AddItem}/>\n\n        </div>\n      );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}